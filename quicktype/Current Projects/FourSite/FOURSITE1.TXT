0 CLS:GOTO50
5 FORC1=1TO1500:NEXT:RETURN
10 REM *****************************
11 REM ** LISTING 8.1             **
12 REM ** FOUR-SITE COMPUTER GAME **
13 REM *****************************
50 CLS:H1=RND(-(PEEK(9)*256+PEEK(10))):REM RANDOMIZE TIMER
100 REM-- THE GAME OF FOUR-SITE
110 DIM BD(35):REM GAME BOARD
115 DIM M$(20),A(20),B(20),P(20),E(20),B$(20),X(20),P$(20):REM PARAMETER STACKS
120 GOSUB 1000:REM INITIALISATION
130 GOSUB 1600:REM INSTRUCTIONS
150 IF Y$<>"N" AND Y$<>"n" THEN 160
151 GOTO 365
160 GOSUB 2000:REM CLEAR BOARD ETC.
170 INPUT "WHO GOES FIRST (1=YOU, 2=ME)";H1
180 IF H1<1 OR H1>2 THEN 170
200 REM-- MAIN LOOP
210 IF EG=0 AND M<32 THEN 220
211 GOTO 330
220 IF H1=1 THEN GOSUB 3000
230 REM-- PERSON'S TURN.
240 GOSUB 3500:REM BOARD DISPLAY
250 H1=1:REM ALWAYS 1 AFTER FIRST CYCLE
254 GOSUB 6700
255 PRINT "V =";S5
260 GOSUB 4000:REM TEST FOR WIN
270 IF EG=0 THEN GOSUB 5000
280 REM COMPUTER'S TURN.
290 GOSUB 3500:REM SHOW BOARD AGAIN
300 GOSUB 4000:REM TEST FOR ENDGAME
302 GOSUB 6700
303 PRINT"V =";S5;" ";BV
310 GOTO 210
320 REM-- FINALE
330 GOSUB 6000:REM CONGRATULATIONS
340 INPUT "ANOTHER GAME (N=NO) ";Y$
350 Y$=LEFT$(Y$,1)
360 GOTO 150
365 PRINT
370 PRINT "SO LONG, AND THANKS FOR THE":PRINT"GAME!"
400 END
500 REM MAXIMOVE ROUTINE
505 REM-- MY TURN
510 IF D>MD THEN GOSUB 6700:E(D-1)=S5:RETURN
515 P(D)=0:B$(D)=""
520 REM ELSE GO DEEPER
525 IF P(D)<=11 AND A(D)<B(D) THEN 530
526 GOTO 555
530 P(D)=P(D)+1
535 M$(D)=MT$(P(D))
536 IF D=1 THEN PRINT M$(D);
540 D=D+1:M$(D1)=M$(D):A(D1)=A(D):B(D1)=B(D):D=D1:GOSUB 600:D=D-1
545 IF E(D)>A(D) THEN A(D)=E(D):B$(D)=M$(D)
548 IF D=1 THEN PRINT LEFT$("                                ",5-LEN(STR$(E(D))));E(D);"; ";
550 GOTO 525
555 IF A(D)>BV AND D=1 THEN BV=A(D):MM$=B$(D) 
556 REM KEEP BEST SO FAR
560 E(D-1)=A(D):RETURN
565 REM:RETURN WITH MAX A
600 REM MINREPLY ROUTINE
606 REM-- OTHER'S REPLY
610 P(D)=12:X(D)=0:P$(D)=""
620 IF P(D)<=17 AND B(D)>A(D) THEN 630
621 GOTO 695
630 P(D)=P(D)+1
640 P$(D)=MT$(P(D))
650 P1$=M$(D)+P$(D):P2=ME:GOSUB 6630
660 IF RC<0 THEN X(D)=X(D)+1:GOTO 690
670 D1=D+1:M$(D1)=M$(D)+P$(D):A(D1)=A(D):B(D1)=B(D):D=D1:GOSUB 700:D=D-1
680 IF E(D)<B(D) THEN B(D)=E(D)
688 P1$=M$(D)+P$(D):P2=0:GOSUB 6630:REM UNDO IT.
690 GOTO 620
695 IF X(D)>5 THEN B(D)=LO:REM REJECT ILLEGAL MOVE
696 E(D-1)=B(D):RETURN
697 REM:RETURN WITH MIN B
700 REM MINIMOVE ROUTINE
710 REM-- OTHER'S TURN
720 P(D)=0
730 IF D>MD THEN GOSUB 6700:E(D-1)=S5:RETURN
750 IF P(D)<=11 AND B(D)>A(D) THEN 755
751 GOTO 790
755 P(D)=P(D)+1
760 D1=D+1:M$(D1)=MT$(P(D)):A(D1)=A(D):B(D1)=B(D):D=D1:GOSUB 800:D=D-1
770 IF E(D)<B(D) THEN B(D)=E(D)
780 GOTO 750
790 E(D-1)=B(D):RETURN
800 REM MAXREPLY ROUTINE
805 REM-- MY REPLY
810 P(D)=12:X(D)=0:P$(D)=""
820 IF P(D)<=17 AND A(D)<B(D) THEN 825
821 GOTO 885
825 P(D)=P(D)+1:P$(D)=M$(D)+MT$(P(D))
830 P1$=P$(D):P2=IT:GOSUB 6630
835 IF RC<0 THEN X(D)=X(D)+1:GOTO 880
840 D1=D+1:M$(D1)=P$(D):A(D1)=A(D):B(D1)=B(D):D=D1:GOSUB 500:D=D-1
845 IF E(D)>A(D) THEN A(D)=E(D)
850 P1$=P$(D):P2=0:GOSUB 6630
880 GOTO 820
885 IF X(D)>5 THEN A(D)=HI:REM REJECT
890 E(D-1)=A(D):RETURN
1000 REM-- INITIALISATION ROUTINE
1010 DIM VT(20):REM VALUE TABLE
1020 VT(0)=0
1030 FOR I=6 TO 20
1040 VT(I)=0:NEXT
1050 VT(1)=-1:VT(2)=-2:VT(3)=-7:VT(4)=-255
1060 VT(5)=1:VT(10)=2:VT(15)=8:VT(20)=256
1070 REM LETS PROGRAM LOOK UP LINE SCORES.
1075 HI=9999:LO=-9999
1077 BV=0
1080 ME=5:IT4=1:REM SELF/OTHER
1085 ME$=" X "
1088 IT$=" O "
1100 REM-- NOW READ DATA
1110 DIM MT$(18):REM MOVE TABLE
1120 RESTORE
1130 FOR I=1 TO 18
1140 READ MT$(I):NEXT
1150 RETURN
1500 REM-- DATA FOR MOVE TABLE
1510 DATA C4,R4,C3,R3,C2,R2
1520 DATA C5,R5,C6,R6,C1,R1
1525 DATA X1,X6,X2,X5,X3,X4
1600 REM-- INSTRUCTION ROUTINE
1610 CLS:PRINT
1620 PRINT"WELCOME TO FOUR-SITE, THE"
1621 PRINT"BRAIN GAME. IF YOU DON'T KNOW"
1630 PRINT"THE RULES, READ THE BOOK!"
1635 PRINT
1636 PRINT"GIVE MOVES AS R (ROW) OR"
1640 PRINT"C (COL) FOLLOWED BY A NUMBER,"
1641 PRINT"E.G. R1, C4, ETC."
1650 PRINT:PRINT"GOOD LUCK!":SOUND 200,1
1660 RETURN 
2000 REM-- PREPARATION ROUTINE
2010 M=0:REM MOVES
2012 M$=""
2020 FOR I=0 TO 35
2030 BD(I)=0:NEXT
2040 NS$="":REM NULL STRING
2050 EG=0
2100 RETURN
3000 REM-- PERSON'S MOVE
3010 M=M+1
3020 PRINT:OK=0
3030 IF OK=0 THEN 3040
3031 GOTO 3140
3040 INPUT "YOUR MOVE IS";HM$
3050 H$=LEFT$(HM$,1)
3080 N=VAL(MID$(HM$,2,1))
3090 IF N>0 AND N<7 THEN OK=1:GOTO 3100
3019 OK=0
3100 IF H$<>"C" AND H$<>"R" THEN OK=0
3110 GOSUB 3200:REM CHECK IT'S NOT FULL.
3120 IF OK=0 THEN PRINT"INVALID-- PLEASE RE-TRY!"
3130 GOTO 3030
3140 HM$=H$+CHR$(N+48)
3150 REM-- NOW PICK OWN REPLY
3160 GOSUB 3330
3170 HM$=HM$+M$
3175 M$=HM$
3180 PRINT"MOVE"M"-> ";HM$:GOSUB5
3188 P1$=HM$:P2=IT:GOSUB 6630
3190 RETURN
3200 REM-- ROW/COL CHECK ROUTINE
3210 IF NOT OK THEN RETURN:REM DON'T BOTHER
3220 Q=1
3230 IF H$="C" THEN Q=6
3240 B=N-1
3250 IF H$="R" THEN B=B*6
3260 K=0
3270 FOR I=1 TO 6
3280 IF BD(B)=0 THEN K=K+1
3290 B=B+Q:NEXT I
3300 IF K=0 THEN OK=0:PRINT HM$;" FULL!"
3310 RETURN
3330 REM-- COMPUTER-REPLY ROUTINE
3340 H$=LEFT$(HM$,1)
3350 IX=1:C$="C"
3360 IF H$="C" THEN IX=6:C$="R"
3370 N=VAL(MID$(HM$,2,1))-1
3380 IF H$="R" THEN N=N*6
3390 REM-- SPECIAL CASES IN OPENING
3400 IF M<3 THEN M$=C$+CHR$(49):RETURN
3420 B=LO:Y$=""
3430 FOR I=1 TO 6:Y$=C$+CHR$(48+I)
3440 P1$=HM$+Y$:P2=IT:GOSUB 6630
3444 IF RC<0 THEN 3480:REM OCCUPIED!
3450 REM-- TRIES IT
3459 GOSUB 6700
3460 V=S5:REM STATIC EVAL.
3465 IF V>B THEN B=V:M$=Y$
3470 P1$=HM$+Y$:P2=0:GOSUB 6630:REM UNDO IT
3480 NEXT I
3490 RETURN:REM M$ IS HALF-MOVE.
3500 REM-- BOARD DISPLAY ROUTINE
3520 CLS:PRINT
3522 PRINT"MOVE";M;"--> ";
3525 PRINT M$
3530 R=54:REM ASCII! '6'
3540 FOR P=30 TO 0 STEP-6
3550 PRINT"R";CHR$(R);" ";
3560 FOR I=0 TO 5
3570 Z=BD(P+I)
3580 IF Z=0 THEN PRINT" . ";
3590 IF Z=ME THEN PRINT ME$;
3600 IF Z=IT THEN PRINT IT$;
3610 NEXT I
3620 R=R-1
3630 PRINT
3640 NEXT P
3650 PRINT "  ";
3660 FOR I=1 TO 6
3670 PRINT" C";CHR$(48+I);
3675 NEXT
3677 PRINT
3690 RETURN
4000 REM-- WIN-TEST ROUTINE (ON M$)
4001 IF M<1 THEN RETURN
4004 P1$=M$:P2=-1:GOSUB 6630
4005 REM RE-SET RC
4010 EG=0:REM ENDGAME
4020 R=INT(RC/6)
4030 C=RC-(6*INT(RC/6)):REM MODULUS
4040 REM ROW AND COL.
4044 REM-- FIRST LOOK IN ITS ROW
4050 FOR J=R*6 TO R*6+2
4060 T=BD(J)+BD(J+1)+BD(J+2)+BD(J+3)
4070 IF T=4*IT THEN EG=-1
4080 IF T=4*ME THEN EG=1
4090 NEXT
4100 IF EG THEN RETURN
4101 REM-- NEXT ITS COL
4110 FOR J=C TO C+12 STEP 6
4120 T=BD(J)+BD(J+6)+BD(J+12)+BD(J+18)
4130 IF T=4*ME THEN EG=1
4140 IF T=4*IT THEN EG=-1
4150 NEXT
4160 IF EG THEN RETURN
4170 REM-- DOES ALL DIAGONALS (SIMPLER)
4180 P=0:IX=7:REM START-> NE
4190 FOR J=1 TO 18
4200 T=BD(P)+BD(P+IX)+BD(P+IX*2)+BD(P+IX*3)
4210 IF T=4*IT THEN EG=-1:RETURN
4220 IF T=4*ME THEN EG=1:RETURN
4230 P=P+6
4240 IF P>17 THEN P=P-17
4250 IF P=3 THEN IX=5:REM-> NW
4260 NEXT J
4270 RETURN
5000 REM-- COMPUTER'S MOVE ROUTINE
5010 REM STARTS WITH RND, JUST TESTING
5020 M=M+1
5030 MM$=""
5033 C$="C"
5035 IF INT(RND(0)*10)+1>4 THEN C$="R"
5040 IF M<3 THEN MM$="C4":REM OPENING
5050 IF M<5 AND M>2 THEN MM$=C$+"4"
5060 REM-- PICK ROW/COL
5070 GOSUB 5200:REM -> MM$
5080 GOSUB 5500:REM HUMAN'S HALF.
5090 M$=MM$+HM$
5100 P1$=M$:P2=ME:GOSUB 6630
5110 RETURN
5200 REM-- MOVE SELECTION
5210 IF MM$<>"" THEN RETURN
5220 MD=3:BV=LO
5222 IF M<10 THEN MD=1
5223 IF M>20 THEN MD=5
5225 REM-- LOOK DEEPER IN ENDING.
5230 M$(1)="":A(1)=LO:B(1)=HI:D=1:GOSUB 500:A=E(D-1)
5240 PRINT A
5250 RETURN:REM WITH MM$
5500 REM-- HUMAN HALFMOVE ROUTINE
5510 PRINT
5520 PRINT "I CHOOSE: ";MM$:OK=0
5530 IF OK=0 THEN 5540
5531 GOTO 5660
5540 INPUT "GIVE SECOND CO-ORDINATE PLEASE: ";HM$
5550 H$=LEFT$(HM$,1)
5580 HM$=H$+MID$(HM$,2,1)
5590 N=VAL(MID$(HM$,2,1))
5600 IF N>0 AND N<7 THEN OK=1:GOTO 5610
5601 OK=0
5610 IF H$=LEFT$(MM$,1) THEN OK=0
5615 IF NOT OK THEN 5650
5620 P1$=MM$+HM$:P2=-1:GOSUB 6630
5630 IF BD(RC)<>0 THEN OK=0
5640 IF OK=0 THEN PRINT"INVALID-- RE-TRY!"
5650 GOTO 5530
5660 RETURN:REM WITH HM$
5665 GOTO 5530
6000 REM-- CONGRATULATIONS ROUTINE
6010 PRINT"GAME OVER!"
6020 IF EG>0 THEN PRINT"I WON IT!"
6030 IF EG<0 THEN PRINT"WELL DONE!"
6040 IF EG=0 THEN PRINT"GAME DRAWN"
6050 RETURN
6630 REM PLACES PIECES P2 BY MOVE P1$
6650 X1=VAL(MID$(P1$,2,1))-1
6660 Y1=VAL(MID$(P1$,4,1))-1
6670 IF LEFT$(P1$,1)="R" THEN RC=X1*6+Y1
6680 IF LEFT$(P1$,1)="C" THEN RC=X1+Y1*6
6688 IF BD(RC)>0 THEN IF P2>0 THEN RC=-1:RETURN
6690 IF P2>=0 THEN BD(RC)=P2
6695 RETURN
6700 REM-- STATIC EVALUATION ROUTINE
6730 S4=0:S5=0
6750 REM-- FIRST THE ROWS
6760 FOR S2=0 TO 30 STEP 6
6770 S4=BD(S2)+BD(S2+1)+BD(S2+2)+BD(S2+3)
6780 S5=S5+VT(S4):REM LOOK UP IN TABLE
6790 S4=S4+BD(S2+4)-BD(S2)
6800 S5=S5+VT(S4)
6810 S4=S4+BD(S2+5)-BD(S2+1)
6820 S5=S5+VT(S4)
6830 NEXT
6840 REM-- SECOND THE COLS.
6850 FOR S2=0 TO 5
6860 S4=BD(S2)+BD(S2+6)+BD(S2+12)+BD(S2+18)
6870 S5=S5+VT(S4)
6880 S4=S4+BD(S2+24)-BD(S2)
6890 S5=S5+VT(S4)
6900 S4=S4+BD(S2+30)-BD(S2+6)
6910 S5=S5+VT(S4)
6920 NEXT
6930 REM-- NOW THE DIAGONALS L
6940 S2=0:S3=7
6950 FOR S1=1 TO 9
6960 S4=BD(S2)+BD(S2+S3)+BD(S2+S3+S3)+BD(S2+21)
6970 S5=S5+VT(S4):S2=S2+6
6990 IF S2>16 THEN S2=S2-17
7000 NEXT
7020 S2=3:S3=5
7030 FOR S1=1 TO 9
7040 S4=BD(S2)+BD(S2+S3)+BD(S2+10)+BD(S2+15)
7050 S5=S5+VT(S4):S2=S2+6
7070 IF S2>17 THEN S2=S2-17
7080 NEXT
7090 RETURN
7100 REM RETURNS S5
7110 REM MC-10 EDITS JIM GERRIE
