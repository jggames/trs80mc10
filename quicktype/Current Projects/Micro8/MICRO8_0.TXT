10 REM: "MICROS ", SIMULATION OF AN ASSEMBLY LANGUAGE, IN BASIC
20 REM: VERSION "B" JULY 27, 1978 R.T. PICKETT
30 REM: TYPE IN PROGRAM AS DATA BEGINNING ON LINE 1430
40 REM: TYPE IN NUMBER OF PROGRAM STEPS AS DATA ON LINE 1410
50 REM: ALL REGISTERS AND MEMORY LOCATIONS ARE AUTOMATICALLY
60 REM: CLEARED AT START; ARITHMETIC OPERATIONS LEAVE RESULT IN
70 REM: REGISTER A; EXCHANGE (EXE) LEAVES FIRST VALUE
80 REM: OF B IN Z REGISTER; MAXIMUM SIZE OF A & B IS 10120; RUNNING
90 REM: TIME LIMIT IS 5 MINUTES; LIMIT ON NUMBER OF MACHINE CYCLES
100 REM: IS 20000, THEN DUMPS AUTOMATICALLY.
110 GOTO 1330
120 LET A- B- S -T -Z -O
130 DIM M[200]
140 REM: L = MEMORY LOCATION
150 LET L = 11 160 LET TO= TIM(0)
170 GOTO 220
180 LET L =L +1
190 REM: NEXT LINE IS FIVE MINUTE RUNNING TIME LIMIT
200 IF TIM(0) -TO >5 THEN 1250
210 REM: NEXT LINE, FETCH OPCODE "C" FROM MEMORY
220 LET C =M[L]
230 REM: T = MACHINE CYCLE COUNTER
240 LET T = T + 1 250 IF T > 20000 THEN 1290
260 REM: BEGIN DECODER
270 IF C< 10 THEN 1230
280 IF C=11 THEN 500
290 IF C= 12 THEN 530
300 IF C= 13 THEN 550
310 IF C=14 THEN 180
320 IF C=15 THEN 180
330 IF C= 16 THEN 180
340 IF C= 17 THEN 660
350 IF C=18 THEN 690
360 IF C= 19 THEN 720
370 IF C=20 THEN 760 
380 IF C =21 THEN 180
390 IF C =22 THEN 810
400 IF C =23 THEN 180
410 IF C=24 THEN 840
420 IF C=25 THEN 900
430 IF C =26 THEN 940
440 IF C= 27 THEN 1000
450 IF C =28 THEN 960
460 IF C =29 THEN 180
470 IF C=30 THEN 1100
480 GOTO 1230
490 REM: BEGIN OPERATIONS SPECIFIED BY OPCODES
500 INPUT B 510 IF ABS(B)>1.E + 20 THEN 1310
520 GOTO 180
530 PRINT "B REGISTER = "; B; "MACHINE CYCLES = ";T; "LAST ADDR ="; L;LIN(1) 540 GOTO 180
550 LETL =L +1
560 IF M[L] = 14 THEN 600
570 IF M[L] = 15 THEN 620
580 IF M[L] = 16 THEN 640
590 GOTO 1210
600 LET A= 0
610 GOTO 180
620 LET B =0
630 GOTO 180
640 MAT M =ZER
650 GOTO 180
660 LET L =L +1
670 LET A= A +M[M[L]]
680 GOTO 180
690 LET L =L +1
700 LET A= A- M[M[L]]
710 GOTO 180
720 LET L =L +1
730 LET A= A.M[M[L]]
740 IF ABS(A) > 1.E +20 THEN 1310
750 GOTO 180
760 LET L =L +1
770 IF M[M[L]] =0 THEN 1270
780 LET A =A/M[M[L]]
790 IF ABS(A)> 1.E +20 THEN 1310
800 GOTO 180
810 LET L=L +1
820 LET M[M[L]] =A
830 GOTO 180
840 LET L=L +1
850 IF ABS(A)<M[M[L]] THEN 880
860 LET S =2
870 GOTO 180
880 LET S =1
890 GOTO 180
900 LET Z =B
910 LET B =A
920 LET A= Z 930 GOTO 180
940 PRINT "HALT"
950 STOP
960 LET L =L +1
970 LET L =M[L]
980 GOTO 200
990 REM: DUMP ROUTINE PRINTS OUT MEMORY BEGINNING AT LOCATION 1 1000 PRINT "DUMP ROUTINE ";LIN(1)
1010 PRINT "A = ";A; "B = ";B; "Z = ";Z; "LAST OPCODE _ ";C; "LAST ADDR = ";L
1020 PRINT
1030 PRINT "S = ";S; "MACHINE CYCLES = ";T; "RUN TIME _ ";TIM(0) - TO;
1040 PRINT "MINUTES ";LIN(1)
1050 PRINT "MEMORY CONTENTS:"
1060 FOR D=I TO N +10
1070 PRINT MED];
1080 NEXT D 1090 STOP
1100 IFS =1 THEN 1130
1110 IFS =2 THEN 1160
1120 GOTO 1190 
1130 LET L =L +1
1140 LET L =M[L]
1150 GOTO 200
1160 LET L =L +2
1170 GOTO 200
1180 REM: BEGIN DIAGNOSTIC MESSAGES
1190 PRINT "INVALID S = ";S; "ADDR =";L;
1200 STOP
1210 PRINT "ILLEGAL DEVICE CODE UNDER CLEAR;LAST ADDR = ";L
1220 GOTO 180
1230 PRINT "INVALID OP CODE; LAST MEM ADDR = ";L
1240 STOP
1250 PRINT "FIVE MINUTE RUN TIME EXCEEDED"
1260 GOTO 1000
1270 PRINT "DIVIDE BY ZERO, MEM ADDR = ";L
1280 STOP
1290 PRINT "EXCESSIVE NO. MACH. CYCLES; AUTO DUMP"
1300 GOTO 1000
1310 PRINT "OVERFLOW; LAST ADDR = ";L
1320 GOTO 1000
1330 REM: BEGIN MEMORY LOADING(BEGINS LOADING AT LOCATION 11)
1340 READ N 1350 MAT M = ZER
1360 FOR K =11 TO N +10
1370 READ A
1380 LET M[K] =A
1390 NEXT K 1400 REM: NEXT LINE, NUMBER OF PROGRAM STEPS
1410 DATA 17 1420 REM: FOLLOWING LINES = PROGRAM
1430 DATA 17, 1, 19, 1, 22, 2, 13, 14, 17, 3, 19, 3, 17, 2, 25, 12, 27
1450 LET M[1]= 168
1460 LET M[3] = 12 1470 GOTO 120
1480 END 
