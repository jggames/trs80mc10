5 REM * * * CRITICAL PATH * * * 
6 CLS
7 DIM N(200), E(200), L(200), P(500), S(500), T(500), R(500)
8 DEFINT A-Z
10 REM N(I) IS THE NUMBER OF EVENT I
11 REM E(I) IS THE EARLIEST TIME FOR EVENT I
12 REM L(I) IS THE LATEST TIME FOR EVENT I
13 REM N1 IS THE NUMBER OF EVENTS
14 REM P(I) IS THE EVENT PRECEDING ACTIVITY I
15 REM S(I) IS THE EVENT SUCCEEDING ACTIVITY I
16 REM R(I) IS THE NUMBER OF THE I'TH RANKED ACTIVITY
17 REM N2 IS THE NUMBER OF ACTIVITIES
18 REM C IS THE MINIMUM TIME TO COMPLETE THE PROJECT
30 REM *** PRINT INSTRUCTIONS ***
31 PRINT "INSTRUCTIONS:"
32 PRINT"THIS PROGRAM WILL DETERMINE THE CRITICAL PATH FOR ANY PLANNING"
33 PRINT"PROBLEM.  WHEN DRAWING UP THE NETWORK BEFORE COMPUTATION, MAKE"
34 PRINT"SURE THAT EACH EVENT IS NUMBERED, AND EACH PREDECESSOR EVENT"
35 PRINT"NUMBER IS LESS THAN EACH SUCESSOR EVENT NUMBER.  E.G. EVENT #5"
36 PRINT"MAY NOT FOLLOW EVENT #7.  THE NUMBERING OF THE ACTIVITIES IS"
37 PRINT"COMPLETELY INDEPENDENT OF THE EVENT NUMBERING."
38 PRINT
40 REM *** INPUT EVENTS ***
41 GOSUB 200
50 REM *** INPUT ACTIVITIES ***
51 GOSUB 300
52 CLS
60 REM *** RANK ACTIVITIES ON ASCENDING PREDECESSOR NUMBER ***
61 N5=0
62 GOSUB 400
70 REM *** FIND EARLY EVENT TIMES ***
71 GOSUB 500
80 REM *** FIND LATE EVENT TIMES ***
81 GOSUB 700
90 REM *** PRINT EVENT TIMES ***
91 GOSUB 800
95 REM *** PRINT ACTIVITY TIMES ***
96 GOSUB 900
100 GOTO 1000
200 REM *** SUBROUTINE TO INPUT EVENT NUMBERS ***
201 INPUT "HOW MANY EVENTS (I.E. NODES OR JUNCTIONS)"; N1 : PRINT : PRINT "INPUT EVENT NUMBERS USED (IN ANY ORDER)"
202 FOR I=1 TO N1
203 E(I)=0: L(I)=0
204 INPUT N(I)
205 NEXT I : PRINT
206 RETURN
300 REM *** SUBROUTINE TO INPUT ACTIVITIES ***
301 INPUT "HOW MANY ACTIVITIES (I.E. 'LINES')"; N2
302 FOR I=1 TO N2
303 PRINT"TIME FOR ACTIVITY #";I;:INPUT T(I)
304 INPUT "PRECEEDING EVENT #"; P(I)
305 INPUT "SUCCEEDING EVENT #"; S(I)
306 IF S(I)<P(I) PRINT "SUCCESSOR NODE MUST BE > PREDECESSOR NODE. TRY AGAIN" : GOTO 304
307 PRINT :NEXT I
308 RETURN
400 REM *** SUBROUTINE TO ASSIGN RANKS TO ACTIVITIES ***
401 REM *** IF N5=0, RANK ON ASCENDING ORDER OF PREDECESSOR ***
402 REM *** IF N5=1, RANK ON DESCENDING ORDER OF SUCCESSOR ***
410 FOR I=1 TO N2
411 R(I)=I
412 NEXT I
414 N9=N2
420 N9=N9-1
421 N8=0
422 FOR I=1 TO N9
423 IF N5=1 THEN 426
424 IF P(R(I)) <= P(R(I+1)) THEN 431
425 GOTO 427
426 IF S(R(I)) >= S(R(I+1)) THEN 431
427 R1=R(I)
428 R(I)=R(I+1)
429 R(I+1)=R1
430 N8=1
431 NEXT I
432 IF N8=1 THEN 420
440 RETURN
500 REM *** SUBROUTINE TO FIND EARLY EVENT TIMES ***
510 FOR I=1 TO N2
511 N3=P(R(I))
512 GOSUB 600
513 I1=K
514 N3=S(R(I))
515 GOSUB 600
516 I2=K
517 IF E(I2)>=E(I1)+T(R(I)) THEN 519
518 E(I2)=E(I1)+T(R(I))
519 NEXT I
520 RETURN
600 REM *** SUBROUTINE TO FIND INTERNAL NUMBER (K) OF EVENT N3 ***
610 FOR K=1 TO N1
611 IF N(K)=N3 THEN 620
612 NEXT K
613 PRINT "SORRY -- YOU DIDN'T TELL ME ABOUT EVENT";N3
614 STOP
620 RETURN
700 REM *** SUBROUTINE TO FIND LATE EVENT TIMES ***
701 REM *** RANK ACTIVITIES IN DESCENDING ORDER OF SUCCESSORS ***
711 N5=1
712 GOSUB 400
720 FOR I=1 TO N2
721 N3=S(R(I))
722 GOSUB 600
723 I1=K
724 N3=P(R(I))
725 GOSUB 600
726 I2=K
727 IF L(I2)>=L(I1)+T(R(I)) THEN 729
728 L(I2)=L(I1)+T(R(I))
729 NEXT I
730 N3=S(R(1))
731 GOSUB 600
732 C=E(K)
733 FOR I=1 TO N1
734 L(I)=C-L(I)
735 NEXT I
740 RETURN
800 REM *** SUBROUTINE TO PRINT EVENT TIMES ***
801 PRINT
802 Y$="":INPUT "DO YOU WANT A HARD-COPY...<ENTER> OR <N>";Y$: CLS
803 IF Y$="N" THEN H=0 ELSE H=1
804 PRINT "************************ EVENT TIMES *************************"
805 PRINT "EVENT", "EARLIEST","LATEST"
806 IF H=0 THEN 830
807 LPRINT "************* EVENT TIMES *************"
808 LPRINT "EVENT"; TAB(7) "EARLIEST"; TAB(17) "LATEST" 
830 FOR I=1 TO N1
831 IF E(I)=L(I) THEN 834
832 PRINT N(I), E(I), L(I) : IF H=1 THEN LPRINT N(I); TAB(7) E(I); TAB(17) L(I)
833 GOTO 835
834 PRINT N(I), E(I), L(I), "CRITICAL PATH" : IF H=1THEN LPRINT N(I);TAB(7) E(I); TAB(17) L(I); TAB(27) "CRIT PATH"
835 NEXT I
840 RETURN
900 REM *** SUBROUTINE TO PRINT ACTIVITY TIMES *** 
901 PRINT: IF H=1 THEN LPRINT " " : LPRINT " "
902 PRINT "*********************** ACTIVITY TIMES ***********************"
904 PRINT "PRE #"; TAB(7) "SUC #", "ACTUAL TIME", "MAX TIME"
905 IF H=0 THEN 930
906 LPRINT "************ ACTIVITY TIMES ***********"
907 LPRINT "PRE #"; TAB(7) "SUC #"; TAB(17) "ACT TIME"; TAB(27) "MAX TIME"
930 FOR I=1 TO N2
931 N3=P(I)
932 GOSUB 600
933 I1=K
934 N3=S(I)
935 GOSUB 600
936 I2=K
937 D=L(I2)-E(I1)
938 IF T(I)=D THEN 941
939 PRINT P(I); TAB(7)S(I), T(I), D : IF H=1 THEN LPRINT P(I); TAB(7) S(I); TAB(17) T(I); TAB(27) D
940 GOTO 942
941 PRINTP(I); TAB(7) S(I), T(I), D, "CRITICAL PATH": IF H=1 THEN LPRINT P(I); TAB(7) S(I); TAB(17) T(I); TAB(27) D; TAB(37) "CP"
942 NEXT I
950 RETURN
1000 END
