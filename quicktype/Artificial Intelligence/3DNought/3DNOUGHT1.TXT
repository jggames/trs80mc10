10 GRAPH 0 :REM RESTORE THE SCROLLER 490 NEXT A
20 RESTORE 500 B$ = ".X0"
30 CLEAR 100 :REM RESERVE STRING SPACE 510 M = 1 :REM MOVE NUMBER
40 ?CHR$(12) :REM CLEAR THE SCREEN 520 Q = 76 :REM NUMBER OF UNBLOCKED LINES
50 RANDOMIZE 530 GRAPH 1 :REM SET THE SCROLLER
60 ?TAB(13);"N OUGHT S" 540 FOR F 0 TO 63
70 ?TAB(13);" 550 GOSUB 1180 :REM DISPLAY EMPTY BOARD
80 ? 560 NEXT F
90 ?TAB(17)"A N D" 570 C = 22 :REM DISPLAY TITLE
100 ?TAB(17);" 580 FOR D = 1 TO 17
110 ? 590 PLOT C,45,ASC(MID$("LAST MOVE",D,1))
120 ?TAB(13);"C R 0 S S E 5" 600 C = C+2
130 ?TAB(13);" 610 NEXT D
140 9'+9.,.7.7'+ 620 INPUT "Shall I go first"; A$
150 DIM M(63,6),N(75),E(18),D(63),W(63) 630 Z = LEFT$(A$,1)="Y"
160 DIM P(63),H(7),C(10),G(63),Q(15),B(13) 640 IF Z THEN 850
170 REM INITIALIZE THE DATA ARRAYS 650 ?"Your move number";M+Z;"please";
180 FOR A = 0 TO 6 660 INPUT F :REM GET THE MOVE
190 FOR B = 0 TO 63 670 F=16*F-159*INT(F/10)-6*INT(F/100)-21
200 READ M(B,A) :REM THE POINTERS TO THE LINES 680 REM CONVERT FROM EXTERNAL TO INTERNAL COORDS
210 NEXT B 690 IF F >= 0 AND F<=63 THEN 720
220 NEXT A 700 ?"Illegal move"
230 FOR A = 0 TO 15 710 GOTO 650
240 READ Q(A) :REM POINTERS INTO ARRAY W 720 IF G(F) THEN?"Cell occupied":GOTO 650
250 NEXT A 730 G(F)=1 :REM UPDATE THE POSITION
260 FOR A = 0 TO 7 740 GOSUB 1180 :REM ON THE SCREEN
270 READ H(A) :REM FORK COUNTER 750 REM NOW UPDATE THE LINES AND PLANES COUNTERS
280 NEXT A 760 FOR B = 0 TO 6+3*(M(F,6)=76) :REM FOR EACH LINE
290 FOR A = 0 TO 63 770 N = N(M(F,B))
300 READ W(A) :REM MAIN PRIORITIES 780 E = E(M(F,B)/4)
310 NEXT A 790 IF N = 3 THEN?"0K, you win":GOTO 1300
320 FOR A - 0 TO 10 800 IF N=INT(N/4)*4 AND N>3 THEN Q = Q-1
330 READ C(A) :REM FORK PRIORITIES 810 IF Q=0 THEN 1290 :REM TEST FOR DRAW
340 NEXT A 820 N(M(F,B)) = N+1 :REM UPDATE LINE
350 FOR A - 0 TO 63 830 E(M(F,B)/4)-= E-((E-INT(E/8)*8)<7) :REM AND PLANE
360 READ P(A) :REM PLANES PRIORITIES 840 NEXT B
370 NEXT A 850 N=INT((M-1)/4)*8 :REM GET STRATEGY
380 FOR A - 0 TO 13 860 P = -10000 :REM VALUE OF BEST MOVE SO FAR
390 READ B(A) :REM DIAGONALS PRIORITIES 870 FOR A = 0 TO 63 :REM FOR EACH CELL
400 NEXT A 880 IF G(A) THEN 1020 :REM EMPTY?
410 FOR A = 0 TO 75 890 T = 0 :REM VALUE OF THIS CELL
420 N(A)=0 :REM LINES COUNTERS 900 E = 0 :REM FORK COUNTER
430 NEXT A 910 B = 6+3*(M(A,6)=76) :REM NUMBER OF LINES
440 FOR A = 0 TO 63 920 G = (B/3-1)*7!:REM BODY DIAGONAL?
450 G(A)=0 :REM POSITION ARRAY 930 FOR C = 0 TO B
460 NEXT A :REM POINTER

950 T = T+W(N+D)+P(E(M(A,C)/4))*B(G+C)
960 E = E+H(D) :REM CHECK FOR FORKS
970 NEXT C
980 IF E>10 THEN E=10 :REM MAXIMUM VALUE
990 T = T+C(E) :REM ADD FORK PRIORITY
1440 DATA 17,21,25,29,36,21,25,39,40,21,25,43,17,21,25, 29
1450. DATA 18,22,26,30,36,22,26,39,40,22,26,43,18,22,26, 30
1460 DATA 19,33,34,31,19,23,27,31,19,23,27,31,19,45,46, 31
1470 DATA 32,20,24,35,36,1,1,39,40,2,2,43,44,20,24,47
1480 DATA 4,33,34,4,17,37,38,29,17,41,42,29,7,45,46,7
1000 REM TEST IF THIS CELL IS ANY GOOD 1490 DATA 8,33,34,8,18,37,38,30,18,41,42,30,11,45,46,11
1010 IF T+RND(1)>P THEN P=T+.5:F=A:T2=E 1500 DATA 32,23,27,35,36,13,13,39,40,14,14,43,44,23,27, 47
1020 NEXT A 1510 DATA 48,65,66,52,57,48,52,61,58,52,48,62,52,69,70, 48
1030 G(F) = 2 :REM UPDATE CELL 1520 DATA 49,56,60,53,64,49,53,67,68,53,49,71,53,59,63, 49 1040 GOSUB 1180 :REM ON THE SCREEN 1530 DATA 50,60,56,54,68,50,54,71,64,54,50,67,54,63,59, 50 1050 REM UPDATE LINES AND PLANES 1540 DATA 51,69,70,55,61,51,55,57,62,55,51,58,55,65,66, 51
1060 FOR B = 0 TO 6+3*(M(F,6)=76)
1070 N = N(M(F,B))
1080 E = E(M(F,B)/4)
1090 IF N=12 THEN ?"I win":GOTO 1300
1100 IF N<4 AND N<>0 THEN Q -Q-1
1550 DATA 56,76,76,60,76,76,76,76,76,76,76,76,59,76,76, 63
1560 DATA 76,76,76,76,76,57,61,76,76,58,62,76,76,76,76, 76
1570 DATA 76,76,76,76,76,61,57,76,76,62,58,76,76,76,76, 76
1580 DATA 60,76,76,56,76,76,76,76,76,76,76,76,63,76,76, 59
1590 DATA 64,76,76,67,76,76,76,76,76,76,76,76,68,76,76,71
1600 DATA 76,76,76,76,76,65,66,76,76,69,70,76,76,76,76,76
1110 IF Q=0 THEN 1290 1610 DATA 76,76,76,76,76,69,70,76,76,65,66,76,76,76,76,76
1120 N(M(F,B); = N+4 :REM LINES 1620 DATA 68,76,76,71,76,76,76,76,76,76,76,76,64,76,76,67
1130 E(M(F,B)/4) = E-8*(E<56) :REM PLANES 1630 DATA 72,76,76,73,76,76,76,76,76,76,76,76,74,76,76,75
1140 NEXT B 1640 DATA 76,76,76,76,76,72,73,76,76,74,75,76,76,76,76,76
1150 M = M+1 :REM NEXT MOVE 1650 DATA 76,76,76,76,76,75,74,76,76,73,72,76,76,76,76,76
1160 GOTO 650 1170 REM DISPLAY THE MOVE
1660 DATA 75,76,76,74,76,76,76,76,76,76,76,76,73,76,76,72
1665 REM PRIORITY ARRAY POINTERS (16)
1180 C = INT(F/16) 1670 DATA 0,4,5,6,1,7,7,7,2,7,7,7,3,7,7,7
1190 E = F-16*C 1680 REM ROWS OF TWO COUNTERS (8)
1200 D = INT(E/4) 1690 DATA 0,0,5,0,0,1,0,0
1210 E = E-4*D 1700 REM THE MAIN PRIORITIES (64)
1220 B = 36-3*C 1710 DATA 5,10, 1,4000, 1, 4,700,0
1230 A = 20+10*D+2*E 1720 DATA 5,10, 1,4000, 1, 5,700,0 1240 PLOT A,B,ASC(MID$(B$,G(F)+1,1)) 1730 DATA 5,15, 5,4000, 5, 6,700,0
1250 PLOT 34,45,0+49 1740 DATA 5,15,25,4000, 1,12,700,0
1260 PLOT 38,45,E+49 1750 DATA 25,20,40,4000, 1,15,700,0
1270 PLOT 42,45,C+49 1760 DATA 25,30,40,4000, 1,15,700,0
1280 RETURN 1770 DATA 25, 1, 1,4000,10,40,700,0
1290 ?"A draw!" 1780 DATA 25, 1, 1,4000,10,40,700,0
1300 GRAPH 0 1790 REM ROWS OF TWO PRIORITIES (11)
1310 INPUT "Do you want another game"; A$ 1800 DATA 0,0,160,180,200,0,20,180,200,200,400
1320 IF A$="Y" OR A$="YES" THEN 410 1810 REM PLANES PRIORITIES (64) 1330 IF A$="N" OR A$="NO" THEN 1360 1820 DATA 0, 0, 0,5,50,100,200,300
1340 ?"Answer yes or no" 1830 DATA 0, 0, 0,0, 2, 60, 80,100
1350 GOTO 1300 1840 DATA 0, 0, 0,0, 0, 1, 40, 60 1360 ?"0K OK end of program":END 1850 DATA 5, 0, 0,0, 0, 0, 1, 20 1370 REM NOW THE DATA 1860 DATA 55, 5, 0,0,-5, 0, 0, 0 1380 REM FIRST THE LINE POINTERS (448) 1870 DATA 60, 50,10,0, 0,-20, 0, 0 1390 DATA 0,0,0,0,1,37,38,1,2,41,42,2,3,3,3,3 1880 DATA 120,100,20,0, 0, 0,-20, 0 1400 DATA 32,4,4,35,5,5,5,5,6,6,6,6,44,7,7,47 1890 DATA 150,120,25,0, 0, 0, 0,-20 1410 DATA 32,8,8,35,9,9,9,9,10,10,10,10,44,11,11,47 1900 REM DIAGONAL MULTIPLIERS (14) 1420 DATA 12,12,12,12,13,37,38,13,14,41,42,14,15,15,15,15 1910 DATA 1, 1,1.5, 1, 1, 1, 1 1430 DATA 16,33,34,28,16,20,24,28,16,20,24,28,16,45,46,28 1920 DATA 1.5,1.5,1.5,1.5,1.5,1.5,1.5
