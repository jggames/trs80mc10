1 ! *** SUDOGEN: Sudoku Generator & Coach (c) Valentin Albillo, 2006
2 !
3 DESTROY ALL @ OPTION BASE 1 @ STD
4 INTEGER A(9,9),P(9,9),S(9,9),D(9,9),E(9),L(9),Z(81,4) @ DIM
B$[41]
5 !
6 ! User
-
defined functions
7 !
8 DEF FNR=INT(RND*9)+1
9 DEF FNW(X)=(X
-
1) DIV 3
10 DEF FNV=MOD(U+(RND<.5),3)+1+3*FNW(U)
11 !
12 ! Initialization
13 !
14 DISP "Initializing ..." @ FOR I=1 TO 9 @ K=3*FNW(I)+1
15 FOR J=1 TO 9 @ S(I,
J)=K+FNW(J) @ NEXT J @ E(I)=2^I @ NEXT I
16 !
17 ! Request user options
18 !
19 INPUT "Gener/Coach G/C? : ","G";R$ @ IF UPRC$(R$)="G" THEN 21
20 DISP "Enter puzzle: " @ MAT INPUT D @ GOTO 53
21 INPUT "Check solve Y/N? : ","Y";R$ @ G=UPRC$(R$)="Y" @ M
=62
-
11*G
22 INPUT "Symmetric Y/N? : ","N";R$ @ X=UPRC$(R$)="Y"
23 IF G THEN INPUT "# Blanks (1
-
51)? : ","45";T
24 IF NOT G THEN INPUT "# Blanks (1
-
62)? : ","51";T
25 IF T<1 OR T>M OR FP(T) THEN 23 ELSE IF X AND MOD(T,4)>1 THEN 22
26 INPUT "Print sol
ut Y/N? : ","N";R$ @ H=UPRC$(R$)="Y"
27 INPUT "Print/Disp P/D? : ","P";R$ @ Y=UPRC$(R$)="D"
28 !
29 ! Generate puzzle
30 !
31 FOR I=1 TO 9 @ L(I)=I @ NEXT I
32 FOR K=1 TO 20 @ I=FNR @ J=FNR @ U=L(I) @ L(I)=L(J) @ L(J)=U
@ NEXT K
33 ON MOD(FNR,
3)+1 RESTORE 80,81,82 @ READ B$
34 FOR K=0 TO 80 @ I=MOD(K,2)+1
35 A(K DIV 9+1,MOD(K,9)+1)=L(VAL(STR$(NUM(B$[K DIV 2+1])
-
23)[I,I]))
@ NEXT K
36 FOR K=1 TO 20
37 U=FNR @ V=FNV @ FOR I=1 TO 9 @ N=A(I,U) @ A(I,U)=A(I,V) @ A(I,V)=N
@ NEXT I
38 U=
FNR @ V=FNV @ FOR J=1 TO 9 @ N=A(U,J) @ A(U,J)=A(V,J) @ A(V,J)=N
@ NEXT J
39 NEXT K @ W=0 @ IF RND<.5 THEN MAT A=TRN(A)
40 W=W+1 @ DISP " Gen ";STR$(W);":"; @ MAT D=A
41 IF X THEN GOSUB 64 ELSE GOSUB 60
42 IF G THEN DISP " chk "; ELSE DISP @ MAT P=
A @ GOTO 48
43 !
44 ! Test the puzzle's solvability and output if solvable
45 !
46 MAT P=D @ F=0
47 CALL TRY(P,F,0,S,E,Z,K) @ IF F#2 THEN DISP " NOK" @ GOTO 40
ELSE DISP " OK!"
DATAFILE Vxx N
x
Page
7
48 CALL SDP(D,Y) @ IF H THEN DISP "Solution:" @ CALL SDP(P,Y)
49 !
50 ! Offer coaching and if yes, find and output hints
51 !
52 INPUT "Coach Y/N? : ","Y";R$ @ IF UPRC$(R$)#"Y" THEN END
53 CALL TRY(D,F,1,S,E,Z,K) @ IF F<2 THEN GOSUB 69 @ GOTO 53
54 IF F=2 THEN DISP "Solved!" ELSE IF F=3 THEN DISP "Illegal puzzle"
55
IF F=4 THEN GOSUB 71 @ DISP "No more hints"
56 CALL SDP(D,Y) @ END
57 !
58 ! Subroutines: blank, symmetric blank, wait key, output hints
59 !
60 FOR K=1 TO T
61 I=FNR @ J=FNR @ IF D(I,J) THEN D(I,J)=0 ELSE 61
62 NEXT K @ RETURN
63 !
64 IF MOD(T,2
) THEN D(5,5)=0
65 FOR K=1 TO T DIV 4
66 I=FNR @ J=FNR @ IF I=5 OR J=5 OR NOT D(I,J) THEN 66
67 D(I,J)=0 @ D(I,10
-
J)=0 @ D(10
-
I,J)=0 @ D(10
-
I,10
-
J)=0 @ NEXT K
@ RETURN
68 !
69 R$=KEY$ @ IF R$="" THEN 69 ELSE IF R$="#38" THEN RETURN ELSE END
70 !
71 DISP "No more forced values" @ FOR N=2 TO 9 @ FOR U=1 TO K
72 IF Z(U,3)#N THEN 76 ELSE I=Z(U,1) @ J=Z(U,2) @ W=Z(U,4)
73 DISP "[";STR$(I);"
-
";STR$(J);"] admits ";
74 FOR V=1 TO 9 @ IF NOT BIT(W,V) THEN DISP STR$(V);
75 NEXT V @ DISP @ GOSUB 69
76
NEXT U @ NEXT N @ RETURN
77 !
78 ! Data for base puzzle classes
79 !
80 DATA "Xi^Bs$pFOFtX)4/Xj(O^Bso6scD)P;4FAJyV>WiP!"
81 DATA "[,>Db@Z3tx9Q#Z*K;kBQTx
-
[u`&&Uk`tu^K[i`wM."
82 DATA "7*Mck
\
i`JQ^;H1Q/r`u;^iP#=OH*P[.G;H0(2D$yS"
83 !
84 ! Subprogram to
forcibly solve puzzles and/or generate hints
85 !
86 SUB TRY(P(,),F,Z,S(,),E(),A(,),K)
87 INTEGER N1(9,9),N2(9,9),N3(9,9),G(9,9),R(9),C(9),B(9)
88 M=0 @ FOR I=1 TO 9 @ FOR J=1 TO 9 @ IF P(I,J) THEN D=E(P(I,J))
@ GOSUB 113
89 NEXT J @ NEXT I
90 F
=2 @ K=0 @ FOR I=1 TO 9 @ U=R(I) @ FOR J=1 TO 9 @ V=C(J)
@ IF P(I,J) THEN 98
91 K=K+1 @ H=S(I,J) @ F=F*(F#2) @ L=BINIOR(BINIOR(U,V),B(H))
92 IF L=1022 THEN F=3 @ END
93 D=BINAND(BINCMP(L),1023)
-
1 @ N=BIT(D,1)+BIT(D,2)+BIT(D,3)
94 N=N+BIT(D,4)+BIT(D
,5)+BIT(D,6)+BIT(D,7)+BIT(D,8)+BIT(D,9)
95 IF N#1 THEN A(K,1)=I @ A(K,2)=J @ A(K,3)=N @ A(K,4)=L @ GOTO 98
96 P(I,J)=LOG2(D) @ F=1 @ M=M+1 @ R(I)=R(I)+D @ C(J)=C(J)+D
@ B(H)=B(H)+D
97 IF Z THEN GOSUB 110 @ DISP " can only hold";P(I,J) @ END
98 NEX
T J @ NEXT I @ IF NOT Z THEN DISP ".";
99 IF F=1 THEN 90 ELSE IF F=2 THEN END
100 MAT N1=ZER @ MAT N2=ZER @ MAT N3=ZER @ N=0 @ FOR U=1 TO K
@ I=A(U,1)
Page
8
DATAFILE Vxx Nx
101 J=A(U,2) @ H=S(I,J) @ L=A(U,4) @ FOR V=1 TO 9 @ IF BIT(L,V)
THEN 105
102 IF N1(I,V) THEN N1
(I,V)=
-
1 ELSE N1(I,V)=J
103 IF N2(J,V) THEN N2(J,V)=
-
1 ELSE N2(J,V)=I
104 IF N3(H,V) THEN N3(H,V)=
-
1 ELSE N3(H,V)=I @ G(H,V)=J
105 NEXT V @ NEXT U @ FOR U=1 TO 9 @ FOR V=1 TO 9
106 J=N1(U,V) @ IF J>0 THEN I=U @ GOSUB 111
107 I=N2(U,V) @ IF I>0 THEN J=U @ G
OSUB 111
108 I=N3(U,V) @ IF I>0 THEN J=G(U,V) @ GOSUB 111
109 NEXT V @ NEXT U @ IF N THEN 90 ELSE F=4 @ END
110 DISP "[";STR$(I);"
-
";STR$(J);"]"; @ RETURN
111 IF P(I,J) THEN RETURN ELSE M=M+1 @ N=1 @ P(I,J)=V @ D=E(V)
112 IF Z THEN GOSUB 110 @ DISP "=only
site for";V @ END
113 H=S(I,J) @ R(I)=R(I)+D @ C(J)=C(J)+D @ B(H)=B(H)+D @ RETURN
114 !
115 ! Subprogram to pretty
-
print or display puzzles
116 !
117 SUB SDP(A(,),Y) @ IF Y THEN MAT DISP USING "DX";A; @ END
118 DIM A$(2)[37] @ A$(2)="+
--
+
--
+
--
+
--
+
--
+
--
+
--
+
--
+
--
+"
119 C$=CHR$(124) @ A$(1)="+ + + +"
120 DISP @ DISP A$(2) @ FOR I=1 TO 9 @ FOR J=1 TO 9
121 IF MOD(J
-
1,3) THEN DISP " "; ELSE DISP C$;
122 IF A(I,J) THEN DISP " "&STR$(A(I,J)); ELSE DISP " .";
123 NEXT J @ DISP C$ @ DISP A$(NOT
MOD(I,3)+1) @ NEXT I
