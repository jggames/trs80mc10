. RIM --SEARCH AI (911Rr1Ht1f. FUI+ 1`... r'll¡ll E
' REM --fil>t: i.Li SIE 1. 1 AM- . D'; I IF li pbiì? 1 NL, por I S,-, H(Jd,:'Li(l NI¡ PEaI
1 HEM
10.0 DIM ITl,, 1,.ìw1,' 10i,1,R'1.1.201 DIM A104),F1,4,4),14.:4.4).;,I61
L:I. FI - I N I f I AI. 11 F PROGRAM
I . t i lli Ofd e M
UI M
ICI-SI --NEXT i ; DU -WIi I I F LUI IP: WI I IL F. "OPEN" ARRAY NOT EMP I Y AND EX I I REM --- "VAIIIAtil-1.= "SF..ARCH"
1` 1 II EIS - "EY.11" IHF.M 495
I 'C RKM
1nu HCM
It.'ß REM --F INn NI -INDEX OF LOWESI OPEN VALUE
1'0 GU5L ID 9000
l'.: IF OtN11 - 9'1999 THEN 495
177 fR1N1 "t17- EXPAND NODE ";NI;", " :0S(N1); ". VAL= " ;O(N11
ISO RIM
195 REM - -FUT NODE fU CLOSED; "SCRATCH" IN OPEN ARRAY
187 REM --- BY GIVING LARGE VALUE
1911 C9 = C9 t t 2010 O(N1) = 90000 t- i(Nii 220 RFM
_2.., REM
..,', RIM -- UNPACK BOARD POEM AND GENERATE SUCCESSORS IN AS
"40 ES = MIDS (OS(Nl),H1 + 1,L21
-., 1_94. = MIDS 10$(N1),H1,1)
GOSUB 9100
260 REM --NODE 8 N1 IS PASSED AS ITSELF
265 REM -- GENERATE SUCCESSORS
270 GOSUB 9200
:'-75 REM
280 REM
285 REM -- EVALUATE EACH FOR GOAL STATUS --GI NODES WERE GENERATED
::87 IF G1 (i THEN 295
290 PRINT 129(1 --NO SUCCESSORS, NODE " :N1 392 GUTO 470
295 6$ = "NO7 GOAL ": FOR MI = 1 TO G1 300 REM -- RETURN "GOAL" IF AS(MI) IS GOAL NODE
310 GOSUB 9600
320 IF G$ > "GOAL" THEN 380
130 EIS = "EXIT"
330 REM --SAVE INDEX OF GOAL NODE
:.60 REM -- FOLLOWING IS "ELSE" BRANCH OF 3201:Gí NOT = "GOAL"
770 REM -- UNPACK: BOARD TO ES,F$ ARRAYS
380 ES = MIDS (AS(M11,H1 + 1.L2)
3901 GOSUB 9100
395 REM --EVAL H -HAT FCN FOR ES, RESULT IN R1
4(10 GOSUB 99(10 410 REM --PUT AS(M1) ON "OPEN" LIST
420 1.19 = 09 + I 430 01(091 = AS(M1)
4401 0109) = RI 450 NEXT M1 460 REM --END OF DO- WHILE LOOP AT 150
4701 GOTO 150 475 REM
480 REM - - -- 485 REM --THIS SECTION PRINTS EITHER SOLUTION OR FAILURE MESSAGE
495 IF GS . "GOAL" TFIFN 540
500 REM --TRACE BACK: SOLUTION
510 GOSUB 98(10 520 GOTO 550
5 30 REM --NO SOLUTION FOUND
540 PRINT : PRINT "NO SOLUTION FOUND"
550 PRINT "NODES ON OPEN LIST: ";09 - C9
5601 PRINT "NODES ON CLOSED LIST: ";C9
570 END
8000 FOR I = t TO R9
8010 FOR J = 1 TO R9 8020 PRINT F$11.J >;: NEXT J 8030 PRINT " : NEXT I 8040 RETURN
88901 REM
8895 REM -- SUBRTN TO CHECK IF NEW BOARD F$(I,J)
8900 03$ = "NOT DUPLICATED"
8905 REM --CHECK THROUGH ALL EXPANDED NODES
8910 REM -- I.E., NODES WITH O(I)> =90000
8915 FOR I = 1 TO 09: IF O(I) < 90001: THEN 8930
8920 F1$ = MID$ (O$(I),H1 + I,L2) 8925 IF F$= F14 THEN 03$ = "DUPLICATED" THEN 8938
8930 NEXT I 8935 IF 034 = "NOT DUPLICATED" THEN 8938
0937 PRINT "8937 -- CURRENT POSN IS DUPLICATE *5*" 8938 RETURN
8985 REM
8990 REM -- SUBRTN TO FIND N1 SO THAT 0(N1) IS SMALLEST
8995 REM 9000 SI = 99999:N1 = 1 90C)5 FOR I = 1 TO 09 9010 IF O(I) > = SI THEN 9020
9015 Si = 0(I):N1 = I 9020 NEXT I 9025 RETURN
9035 REM
9040 REM --PACK BOARD F$IN,N) TO STRING FY 9045 REM
9050 F4 = "" 9055 FOR B = I TO R9 9060 FOR D = 1 TO R9 9065 F4 = F4 + F$(B,D) 9070 NEXT D 9071 NEXT B 9090 REM
9095 REM -- UNPACK STRING E4 INTO ARRAYS E$ 04,N), F$(N,N) 9100 FOR I = I TO R9
9105 FOR J = i TO R9 9110 01 = R9 k (I -- 1) + J 9115 E4(I,J) = MID4 (E$,01,1)
9120 F$(I,J) = MID4 (E$,01,1) 9125 NEXT J: NEXT I 9150 RETURN
9185 REM
9190 REM EXPAND CURRENT POSN E$(I,J) WITH DIRECTION E9$,NODE# NI 9195 REM -- GIVING SUCCESSORS TN ARRAY A$(N) ;N =1 TO Si 9200 FOR I = 1 TO 5 9205 IF E95 = MID$ (D4,1,1) THEN 9210
9 ::07 NEXT I
+ 210 09$ = MID4 (14,1,1) 9215 REM --09$ IS FORBIDDEN DIRECTION TO EXPAND E4 9220 FOR VI = 1 TO R9: FOR XI = 1 TO R9 9225 IF E4(X1,Y1) = ." THEN 9238
92S0 NEXT X1: NEXT VI
' 9:230 REM --X1,Y1 =COORDINATE: OF "BLANK" IN PUZZLE
9238 G1 - 0 9240 REM --NEXT IS A LOOP THAT GENERATES 4 POSSIBLE SUCCESSORS
9242 S1 = 1:A9 = 0
9;:45 IF SI 4 THEN 9315
9250 IF MID4 (D$,S1,1) = 094 THEN 9310
9255 X2 = X1 + X(Sl):Y2 = Y1 + V(S1) 9260 FOR I = I TO R9: FUR J = 1 TO R9
9265 F$(l,J) = E$(I,J): NEXT J: NEXT I 9270 REM -- EXCHANGE SQUARES (X1,Y1) AND (X2,Y2) 9272 IF 12 < :1 DR X2 > R9 THEN 9310
9273 IF Y2 <
1 OR Y2 :> R9 THEN 9310
9275 F4((1,Y11 = F$(X2,Y2):F$(X2,Y2) _ 9280 REM --PACK NEW BOARD AS NODE IN A$(N) 9285 GOSUB 9050
9287 REM --CHECK FOR DUPLICATES IN 0$ 9290 GOSUB 8900
9295 IF 03$ = "DUPLICATE" THEN 9310
9296 REM --NODE= POINTER BACK, +DIRECTION +PACKED ARRAY
9297 A9 = A9 + 1 9302 GOSUB 9400
9303 A$(A9) = 0$ + MID$ (05,51,1) + F4 9305 GI = G1 + 1 9310 S1 = S1 + 1: GOTO 9245
9315 RETURN
9390 REM
9395 REM --SUBR CONVERTS Ni TO A STRING OF CHARS, LENGTH OUTPUT IN 0$ 9397 REM
9400 Q4 = STR$ (Ni) 9410 01 = LEN (Q4) 9420 REM --ADD LEADING ZEROES TO 0$ 9425 02 = OB - 01 9430 IF 02 > = 0 THEN 9440
9435 PRINT "SIZE ERROR IN 9400 --ABORT JOB ": END
9440 IF 02 = 0 THEN 9455
9445 FOR I = I TO 02 9450 0$ = "0" + 0$: NEXT I 9455 RETURN
9485 REM
9490 REM -- SUBRTN TO INITIALIZE PGM
9495 REM
9500 08 = 3:R9 = 3 9505 DATA -1,0,0,1,1,0,0, -1 9510 FUR I = I TO 4: READ X(I),Y(I): NEXT I 9515 D$ = "DLURB": 1$ = "URDL"
952': E9$ = "B" 9523 02$ = "1.3426758 ": SOTO 9535
9525 PRINT : PRINT "ENTER PUZZLE TO BE SOLVED IN ";R9 S R9;" CHARACTERS"
953() INPUT 023
9535 IF LEN (02$) = R9 t R9 THEN 9550
9540 PRINT : PRINT "ERROR IN PUZZLE ENTRY TRY AGAIN."
9545 GOTO 9525
9550 09 = 1:0(1) = 0 9552 NI = 1: GOSUB 9400
9553 0$(1) = Of + "F" + 02$
9555 REM -- ABOVE IS INITIALIZATION OF "OPEN" LISTS, ARRAYS O AND 0$
9560 hEM -- NEXT IS INITIALIZATION OF "CLOSED" LISTS --C AND CS ARE BOTH EMPTY 9565 C9 = 0 9575 HS = 08 + I:L2 = R9 * R9 9580 EIS = "SEARCH"
9585 G$ = NO GOAL"
9587 RETURN
9590 REM
9591 REM -- SUBRTN TO SEE IF BOARD IS GOAL NODE
9595 REM -- RETURNS G3= "GOAL" OR "NOT GOAL"
9600 03$ = "12345678."
9610 IF R9 = 4 THEN 03$ = "123456789ABCOEF."
9615 04$ = RIGHTS (A$(M1),L2)
9620 IF 03$ = 04$ THEN G$ = "GOAL " :N6 = 09 + 1 9625 REM -- N6 =INOEX OF GOAL NODE; =09 +1 BECAUSE 09 POINTS TO LAST
9630 REM -- NODE FILLED: SEE 420 -440
9635 RETURN
9685 REM
9785 REM
9790 REM -- SUBRTN TO TRACE BACK. AND PRINT SOLN FROM OS(N1) 9795 REM
'1000 R1 = 0 9805 REM --DO UNTIL POINTER = "B" 9810 0$ = MIDS (O3(N6),O8 + 1,1) 9015 IF 0$ ' "B" THEN 9820
9817 R1 = R1 + 1:R$(R1) = 0$
9820 01$ = LEFTS (OS(N6),OB)
7B25 NA = VAL (01$)
YNO IF 03 , "B" THEN 9810
9035 REM -- DONE: PRINT VALUES OF RS FROM R1 TO I 9840 IF R1 = 0 THEN PRINT : PRINT "ZERO ERROR IN BACKTRACKING ": GOTO 9880 9845 PRINT : PRINT "SOLUTION IS ". 9R 5o FOR N - RI T(1 1 STEP -- t 9855 PRINT " ":R$(N); 9P60 IfE X ; r1 9 5 PRIM . f:h!Ft : PRINT RI :" E'ER "; "Bb! If RI . I THEN FiI N'I "S "; t-PIM; r PRwr
PEPIWI 
