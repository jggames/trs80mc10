0 CLS:GOTO10
5 C1=(32-LEN(M$))/2:PRINT:PRINTTAB(C1)M$:RETURN
10 M$="SEARCH ALGORITHMS AND PROGRAM":GOSUB5
20 M$="FOR 8 AND 15-PUZZLE":GOSUB5:PRINT
30 M$="GREGG WILLIAMS":GOSUB5:PRINT
40 M$="BYTE MAGAZINE":GOSUB5
50 M$="SEPTEMBER 1981":GOSUB5
60 PRINT:PRINT:INPUT"   PRESS enter TO CONTINUE";M$
70 CLS:CLEAR7000:PRINT"1) BREADTH-FIRST":PRINT"2) PURE DEPTH-FIRST":PRINT"3) BY LIMITED DEPTH FIRST"
80 INPUT"CHOOSE SEARCH TYPE";M$:SS=VAL(M$):IFSS<1ORSS>3THEN70
85 IFSS=3THENINPUT"ENTER DEPTH (R3) VALUE";R3:IFR3<1ORR3>5THEN85
90 CLS
100 DIMO$(500),O(500),R$(30)
102 DIMA$(4),E$(4,4),F$(4,4),Z(16)
110 REM INITILIZE PROGRAM
120 GOSUB9500
125 REM 
130 REM VARIABLE="SEARCH"
140 REM
150 IFE1$="EXIT"THEN495
158 REM
160 REM FIND N1=INDEX OF LOWEST OPEN VALUE
165 REM
170 GOSUB9000
175 IFO(N1)>=99999THEN495
177 PRINT "177-EXPAND NODE";STR$(N1);",":PRINTO$(N1);", VAL=";O(N1)
180 REM
185 REM PUT NODE TO CLOSED; "SCRATCH" IN OPEN ARRAY BY GIVING LARGE VALUE
187 REM 
190 C9=C9+1
200 O(N1)=90000+O(N1)
220 REM
225 REM UNPACK BOARD POSN AND GENERATE SUCCESSORS IN A$
230 REM
240 E$=MID$(O$(N1),H1+1,L2)
250 E9$=MID$(O$(N1),H1,1)
255 GOSUB9100
260 REM NODE # N1 IS PASSED AS ITSELF
265 REM GENERATE SUCCESSORS
270 GOSUB9200
275 REM
280 REM EVALUATE EACH FOR GOAL STATUS--G1 NODES WERE GENERATED
285 REM
287 IFG1>0THEN295
290 PRINT"290-- NO SUCCESSORS, NODE";N1
292 GOTO470
295 G$="NOT GOAL":FORM1=1TOG1 
300 REM RETURN "GOAL" IF A$(M1) IS GOAL NODE
310 GOSUB9600
320 IFG$<>"GOAL"THEN380
330 E1$="EXIT"
335 REM
340 REM SAVE INDEX OF GOAL NODE
360 REM FOLLOWING IS "ELSE" BRANCH OF 320:G$ NOT="GOAL"
370 REM UNPACK BOARD TO E$,F$ ARRAYS
375 REM
380 E$=MID$(A$(M1),H1+1,L2)
390 GOSUB9100
395 REM EVAL H-HAT FCN FOR E$. RESULT IN R1
400 GOSUB9900
410 REM PUT A$(M1) ON "OPEN" LIST
420 O9=O9+1
430 O$(O9)=A$(M1)
440 O(O9)=R1
450 NEXTM1
460 REM END OF DO-WHILE LOOP AT 150 
470 GOTO150
475 REM
480 REM THIS SECTION PRINTS EITHER SOLUTION OR FAILURE MESSAGE
485 REM
495 IFG$<>"GOAL"THEN540
500 REM TRACE BACK SOLUTION 
510 GOSUB9800 
520 GOTO550 
530 REM NO SOLUTION FOUND
540 PRINT:PRINT"NO SOLUTION FOUND"
550 PRINT"NODES ON OPEN LIST:  ";O9-C9
560 PRINT"NODES ON CLOSED LIST:";C9
570 PRINT:INPUT"TRY AGAIN? (Y/N)";M$
580 IFLEFT$(M$,1)="Y"THENRUN70
590 END
8000 FORI=1TOR9
8010 FORJ=1TOR9
8020 PRINTF$(I,J);:NEXTJ
8030 PRINT:NEXTI 
8040 RETURN
8890 REM
8895 REM SUBRTN TO CHECK IF NEW BOARD F$(I,J)
8896 REM
8900 Q3$="NOT DUPLICATED"
8904 REM
8905 REM CHECK THROUGH ALL EXPANDED NODES
8910 REM I.E., NODES WITH O(I)>=90000
8911 REM
8915 FORI=1TOO9:IFO(I)<90000THEN8930
8920 F1$=MID$(O$(I),H1+1,L2)
8925 IFF$=F1$THENQ3$="DUPLICATED":C1=I:I=O9:NEXTI:I=C1:GOTO8938
8930 NEXTI
8935 IFQ3$="NOT DUPLICATED"THEN8938
8937 PRINT"8937 CURRENT POSN IS DUPLICATE"
8938 RETURN
8985 REM
8990 REM SUBRTN TO FIND N1 SO THAT O(N1) IS SMALLEST
8995 REM
9000 S1=99999:N1=1
9005 FORI=1TOO9
9010 IFO(I)>=S1THEN9020
9015 S1=O(I):N1=I
9020 NEXTI
9025 RETURN
9035 REM
9040 REM PACK BOARD F$(N,N) TO STRING F$
9045 REM
9050 F$=""
9055 FORB=1TOR9
9060 FORD=1TOR9
9065 F$=F$+F$(B,D)
9070 NEXTD
9071 NEXTB
9090 REM
9095 REM UNPACK STRING E$ INTO ARRAYS E$(N,N), F$(N,N)
9096 REM
9100 FORI=1TOR9
9105 FORJ=1TOR9
9110 Q1=R9*(I-1)+J
9115 E$(I,J)=MID$(E$,Q1,1)
9120 F$(I,J)=MID$(E$,Q1,1)
9125 NEXTJ:NEXTI
9130 RETURN
9185 REM
9190 REM EXPAND CURRENT POSN E$(I,J) WITH DIRECTION E9$,NODE# N1
9195 REM GIVING SUCCESSORS IN ARRAY A$(N);N=1 TO G1
9196 REM
9200 FORI=1TO5
9205 IFE9$=MID$(D$,I,1)THEN9210
9207 NEXTI
9210 Q9$=MID$(I$,I,1)
9215 REM Q9$ IS FORBIDDEN DIRECTION TO EXPAND E$
9220 FORY1=1TOR9:FORX1=1TOR9
9225 IFE$(X1,Y1)="."THEN9238
9230 NEXTX1:NEXTY1
9235 REM X1,Y1=COORDINATE OF "BLANK" IN PUZZLE
9238 G1=0
9240 REM NEXT IS A LOOP THAT GENERATES 4 POSSIBLE SUCCESSORS
9242 S1=1:A9=0
9245 IFS1>4THEN9315
9250 IFMID$(D$,S1,1)=Q9$THEN9310
9255 X2=X1+X(S1):Y2=Y1+Y(S1)
9260 FORI=1TOR9:FORJ=1TOR9
9265 F$(I,J)=E$(I,J):NEXTJ:NEXTI
9270 REM EXCHANGE SQUARES (XI,Y1) AND (X2,Y2)
9272 IFX2<1ORX2>R9THEN9310
9273 IFY2<1ORY2>R9THEN9310
9275 F$(X1,Y1)=F$(X2,Y2):F$(X2,Y2)="."
9280 REM PACK NEW BOARD AS NODE IN A$(N) 
9285 GOSUB9050
9287 REM CHECK FOR DUPLICATES IN O$
9290 GOSUB8900
9295 IFQ3$="DUPLICATE"THEN9310
9296 REM NODE=POINTER BACK+DIRECTION+PACKED ARRAY
9297 A9=A9+1
9302 GOSUB9400
9303 A$(A9)=Q$+MID$(D$,S1,1)+F$
9305 G1=G1+1
9310 S1=S1+1:GOTO9245
9315 RETURN
9390 REM
9395 REM SUBR CONVERTS N1 TO A STRING OF CHARS, LENGTH OUTPUT IN Q$
9397 REM
9400 IFN1>=0THENQ$=MID$(STR$(N1),2):GOTO9410
9401 Q$=STR$(N1)
9410 Q1=LEN(Q$)
9420 REM ADD LEADING ZEROES TO Q$ 
9425 Q2=O8-Q1
9430 IFQ2>=0THEN9440
9435 PRINT"SIZE ERROR IN 9400--":PRINT"ABORT JOB":END
9440 IFQ2=0THEN9455
9445 FORI=1TOQ2
9450 Q$="0"+Q$:NEXTI
9455 RETURN
9485 REM
9490 REM SUBRTN TO INITIALIZE PGM
9495 REM
9500 O8=3:R9=3:INPUT"8 OR 15-PUZZLE";M$:IFM$="15"THENR9=4
9505 DATA-1,0,0,1,1,0,0,-1
9510 PRINT:FORI=1TO4:READX(I),Y(I):NEXTI
9515 D$="DLURB":I$="URDL"
9520 E9$="B"
9523 REM Q2$="1.3426758":GOTO9535
9525 PRINT"ENTER PUZZLE TO BE SOLVED IN":PRINTMID$(STR$(R9*R9),2);" CHARACTERS"
9526 PRINTLEFT$("(E.G. 1.34267589ABCDEF",R9*R9+6)+")" 
9530 PRINT:INPUTQ2$:IFQ2$=""THENQ2$=LEFT$("1.34267589ABCDEF",R9*R9):PRINTQ2$
9535 IFLEN(Q2$)=R9*R9THEN9550
9540 PRINT:PRINT"ERROR IN PUZZLE ENTRY--":PRINT"TRY AGAIN."
9545 GOTO9525
9550 O9=1:O(1)=0
9552 N1=1:GOSUB9400
9553 O$(1)=Q$+"B"+Q2$
9555 REM ABOVE IS INITIALIZATION OF "OPEN" LISTS, ARRAYS O AND O$
9560 REM NEXT IS INITIALIZATION OF "CLOSED" LISTS --C AND C$ ARE BOTH EMPTY
9565 C9=0
9575 H1=O8+1:L2=R9*R9
9580 E1$="SEARCH"
9585 G$="NO GOAL"
9587 RETURN
9590 REM
9591 REM SUBRTN TO SEE IF BOARD IS GOAL NODE
9595 REM RETURNS G$="GOAL" OR "NOT GOAL"
9600 Q3$="12345678."
9610 IFR9=4THENQ3$="123456789ABCDEF."
9615 Q4$=RIGHT$(A$(M1),L2)
9620 IFQ3$=Q4$THENG$="GOAL":N6=O9+1
9625 REM N6=INDEX OF GOAL NODE;=O9+1 BECAUSE O9 POINTS TO LAST
9630 REM NODE FILLED: SEE 420-440
9635 RETURN
9685 REM
9785 REM SUBRTN TO TRACE BACK
9790 REM AND PRINT SOLN FROM O$(N1)
9795 REM
9800 R1=0
9805 REM DO UNTIL POINTER="B"
9810 Q$=MID$(O$(N6),O8+1,1)
9815 IFQ$="B"THEN9820
9817 R1=R1+1:R$(R1)=Q$
9820 Q1$=LEFT$(O$(N6),O8)
9825 N6=VAL(Q1$)
9830 IFQ$<>"B"THEN9810
9835 REM DONE: PRINT VALUES OF R$ FROM R1 TO 1
9840 IFR1<=0THENPRINT:PRINT"ZERO ERROR IN BACKTRACKING":GOTO9880
9845 PRINT:PRINT"SOLUTION IS ";
9850 FORN=R1TO1STEP-1
9855 PRINT" ";R$(N);
9860 NEXTN
9865 PRINT:PRINT:PRINTR1;"STEP";
9867 IFR1>1THENPRINT"S";
9869 PRINT:PRINT
9880 RETURN
9890 REM SUBRTNS TO COMPUTE SEARCH
9895 REM RESULT R1=VALUE OF PARENT+1
9900 ONSSGOTO9905,9910,9920:STOP
9905 R1=(O(N1)+1)-90000:RETURN:REM H-HAT; BREADTH-FIRST SEARCH
9910 R1=(O(N1)-90000)-1:RETURN:REM H-HAT; PURE DEPTH-FIRST SEARCH
9920 R1=(O(N1)-90000)-1:IFR1=-R3THENR1=0:REM H-HAT BY LIMITED DEPTH FIRST
9925 RETURN
